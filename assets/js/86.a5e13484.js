(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{402:function(_,v,t){"use strict";t.r(v);var r=t(3),s=Object(r.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"网络协议tcp和udp的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络协议tcp和udp的区别"}},[_._v("#")]),_._v(" 网络协议TCP和UDP的区别")]),_._v(" "),v("blockquote",[v("p",[_._v("读懂此文，从此又少一个问题")])]),_._v(" "),v("p",[v("img",{attrs:{src:"/common/1.gif",alt:""}})]),_._v(" "),v("h2",{attrs:{id:"_01-前言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_01-前言"}},[_._v("#")]),_._v(" 01 前言")]),_._v(" "),v("p",[_._v("前端工程师跟网络打交道的时间不比网络工程师的少，浏览器就是我们天天都要用的，发送请求/响应数据其中的过程都要通过网络协议，所以网络协议已经成为前端的必要掌握知识了。而TCP和UDP协议是最关键也是最常见的两个协议，下面我们就来好好总结一下。")]),_._v(" "),v("p",[v("img",{attrs:{src:"/tech/230bf2/tcp_upd-featured.png",alt:""}})]),_._v(" "),v("h2",{attrs:{id:"_02-协议介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_02-协议介绍"}},[_._v("#")]),_._v(" 02 协议介绍")]),_._v(" "),v("h5",{attrs:{id:"tcp"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[_._v("#")]),_._v(" "),v("strong",[_._v("TCP")])]),_._v(" "),v("p",[_._v("TCP是一种面向来连接的、可靠的、基于字节流的传输层通信协议。在计算机网络的OSI模型中，它完成第四层传输层所指定的功能。")]),_._v(" "),v("p",[v("strong",[_._v("面向连接")]),_._v("：数据在发送之前必须在两端建立连接，方法就是我们熟知的三次握手连接。")]),_._v(" "),v("p",[v("strong",[_._v("可靠传输")]),_._v("：通过多种机制来保证数据的正确传输，比如序列号/确认应答机制、检验和机制、超时重传机制、流量控制、拥塞避免机制等。")]),_._v(" "),v("p",[v("strong",[_._v("基于字节流")]),_._v("：虽然应用程序和TCP的交互是一次一个数据块（大小不等），但TCP把应用程序看成是一连串的无结构的字节流。TCP有一个缓冲，当应用程序传送的数据块太长，TCP就可以把它划分短一些再传送。如果应用程序一次只发送一个字节，TCP也可以等待积累有足够多的字节后再构成报文段发送出去。")]),_._v(" "),v("p",[v("strong",[v("font",{attrs:{color:"red"}},[_._v("特点")])],1),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("面向连接")]),_._v(" "),v("li",[_._v("仅支持单播传输")]),_._v(" "),v("li",[_._v("面向字节流")]),_._v(" "),v("li",[_._v("可靠传输")]),_._v(" "),v("li",[_._v("提供全双工通信")])]),_._v(" "),v("h5",{attrs:{id:"udp"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#udp"}},[_._v("#")]),_._v(" "),v("strong",[_._v("UDP")])]),_._v(" "),v("p",[_._v("UDP是一种简单的面向数据报、面向无连接、不可靠的通信协议，位于OSI模型的传输层。在网络中它与TCP协议一样用于处理数据包，是一种无连接的协议。")]),_._v(" "),v("p",[v("strong",[_._v("面向无连接")]),_._v("：UDP 是不需要和 TCP一样在发送数据前进行三次握手建立连接的，想发数据就可以开始发送了。并且也只是数据报文的搬运工，不会对数据报文进行任何拆分和拼接操作。")]),_._v(" "),v("p",[v("strong",[_._v("不可靠")]),_._v("：不可靠性体现在无连接上，通信都不需要建立连接，想发就发，这样的情况肯定不可靠。并且收到什么数据就传递什么数据，并且也不会备份数据，发送数据也不会关心对方是否已经正确接收到数据了。")]),_._v(" "),v("p",[v("strong",[_._v("面向报文")]),_._v("：面向报文的传输方式是应用层交给UDP多长的报文，UDP就照样发送，即一次发送一个报文。UDP对应用层交下来的报文，既不合并，也不拆分，而是保留这些报文的边界，照样发送。")]),_._v(" "),v("p",[_._v("再者网络环境时好时坏，但是 UDP 因为没有拥塞控制，一直会以恒定的速度发送数据。即使网络条件不好，也不会对发送速率进行调整。这样实现的弊端就是在网络条件不好的情况下可能会导致丢包，但是优点也很明显，在某些实时性要求高的场景（比如电话会议）就需要使用 UDP 而不是 TCP。")]),_._v(" "),v("p",[v("strong",[v("font",{attrs:{color:"red"}},[_._v("特点")])],1),_._v("：")]),_._v(" "),v("ul",[v("li",[_._v("面向无连接")]),_._v(" "),v("li",[_._v("不可靠传输")]),_._v(" "),v("li",[_._v("提供单播、多播和广播")]),_._v(" "),v("li",[_._v("面向报文")])]),_._v(" "),v("h2",{attrs:{id:"_03-协议比较"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_03-协议比较"}},[_._v("#")]),_._v(" 03 协议比较")]),_._v(" "),v("p",[v("strong",[v("font",{attrs:{color:"green"}},[_._v("01 图解过程")])],1)]),_._v(" "),v("p",[v("img",{attrs:{src:"/tech/230bf2/tcp.gif",alt:""}})]),_._v(" "),v("p",[v("img",{attrs:{src:"/tech/230bf2/udp.gif",alt:""}})]),_._v(" "),v("p",[v("strong",[v("font",{attrs:{color:"green"}},[_._v("02 特性比较")])],1)]),_._v(" "),v("p",[v("img",{attrs:{src:"/tech/230bf2/diff.png",alt:""}})]),_._v(" "),v("p",[v("strong",[v("font",{attrs:{color:"green"}},[_._v("03 头部比较")])],1)]),_._v(" "),v("p",[v("img",{attrs:{src:"/tech/230bf2/tcp_head.png",alt:""}})]),_._v(" "),v("ul",[v("li",[v("p",[_._v("来源连接端口（16位长）－识别发送连接端口")])]),_._v(" "),v("li",[v("p",[_._v("目的连接端口（16位长）－识别接收连接端口")])]),_._v(" "),v("li",[v("p",[_._v("序列号（seq，32位长）")]),_._v(" "),v("ul",[v("li",[_._v("如果含有同步化旗标（SYN），则此为最初的序列号；第一个数据比特的序列码为本序列号加一。")]),_._v(" "),v("li",[_._v("如果没有同步化旗标（SYN），则此为第一个数据比特的序列码。")])])]),_._v(" "),v("li",[v("p",[_._v("确认号（ack，32位长）—期望收到的数据的开始序列号。也即已经收到的数据的字节长度加1。")])]),_._v(" "),v("li",[v("p",[_._v("数据偏移（4位长）—表示数据部分应该从TCP包的哪个部分开始计算，也可看作TCP首部长度。")])]),_._v(" "),v("li",[v("p",[_._v("保留（3比特长）—须置0，但如果收到的包在该字段，此包也不会丢弃。")])]),_._v(" "),v("li",[v("p",[_._v("标志符（9比特长）")]),_._v(" "),v("ul",[v("li",[_._v("NS—ECN-nonce。ECN显式拥塞通知（Explicit Congestion Notification）是对TCP的扩展，定义于RFC 3540（2003）。ECN允许拥塞控制的端对端通知而避免丢包。ECN为一项可选功能，如果底层网络设施支持，则可能被启用ECN的两个端点使用。在ECN成功协商的情况下，ECN感知路由器可以在IP头中设置一个标记来代替丢弃数据包，以标明阻塞即将发生。数据包的接收端回应发送端的表示，降低其传输速率，就如同在往常中检测到包丢失那样。")]),_._v(" "),v("li",[_._v("CWR—与ECE标志都用于IP首部的ECN字段，当ECE标志为1时，通知对方已将拥塞窗口缩小。")]),_._v(" "),v("li",[_._v("ECE—置为1时通知对方到这边的网络有拥塞。")]),_._v(" "),v("li",[_._v("URG—为1表示高优先级数据包，紧急指针字段有效。")]),_._v(" "),v("li",[_._v("ACK—为1表示确认应答有效")]),_._v(" "),v("li",[_._v("PSH—为1表示是带有PUSH标志的数据，指示接收方应该尽快将这个报文段交给应用层而不用等待缓冲区装满。")]),_._v(" "),v("li",[_._v("RST—为1表示出现严重差错，必须强制断开连接。")]),_._v(" "),v("li",[_._v("SYN—为1表示希望建立连接。")]),_._v(" "),v("li",[_._v("FIN—为1表示发送方没有数据要传输了，要求释放连接。")])])]),_._v(" "),v("li",[v("p",[_._v("窗口（WIN，16位长）—表示从确认号开始，本报文的发送方可以接收的字节数，即接收窗口大小。用于流量控制。")])]),_._v(" "),v("li",[v("p",[_._v("校验和（Checksum，16位长）—对整个的TCP报文段，包括TCP头部和TCP数据，以16位字进行计算所得。这是一个强制性的字段。")])]),_._v(" "),v("li",[v("p",[_._v("紧急指针（16位长）—本报文段中的紧急数据的最后一个字节的序号。")])]),_._v(" "),v("li",[v("p",[_._v("选项字段—用于提高TCP传输性能，最大长度40字节。")])])]),_._v(" "),v("p",[v("img",{attrs:{src:"/tech/230bf2/udp_head.png",alt:""}})]),_._v(" "),v("ul",[v("li",[_._v("来源连接端口（16位长）－识别发送连接端口")]),_._v(" "),v("li",[_._v("目的连接端口（16位长）－识别接收连接端口")]),_._v(" "),v("li",[_._v("报文长度：保存了UDP首部和数据的长度之和")]),_._v(" "),v("li",[_._v("检验和：为了提供可靠的UDP传输而设计的")])]),_._v(" "),v("h2",{attrs:{id:"_04-应用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_04-应用场景"}},[_._v("#")]),_._v(" 04 应用场景")]),_._v(" "),v("p",[_._v("由于TCP保证数据的可靠传输，所以互联网上的很多场景都会使用TCP协议，比如网页浏览、信息发送、文件传输等，可以保证了数据的完整性。")]),_._v(" "),v("p",[_._v("相比于TCP，UDP更适用于实时通信的场景，因为丢了几个包对整体的影响不大，比如视频会议，直播等。")]),_._v(" "),v("h2",{attrs:{id:"_05-小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_05-小结"}},[_._v("#")]),_._v(" 05 小结")]),_._v(" "),v("ul",[v("li",[_._v("TCP是"),v("code",[_._v("面向链接")]),_._v("的，而UDP是"),v("code",[_._v("面向无连接")]),_._v("的。")]),_._v(" "),v("li",[_._v("TCP仅支持单播传输，UDP 提供了单播，多播，广播的功能。")]),_._v(" "),v("li",[_._v("TCP的三次握手保证了连接的可靠性; UDP是无连接的、不可靠的一种数据传输协议，首先不可靠性体现在无连接上，通信都不需要建立连接，对接收到的数据也不发送确认信号，发送端不知道数据是否会正确接收。")]),_._v(" "),v("li",[_._v("UDP的头部开销比TCP的更小，数据传输速率更高，实时性更好。")])]),_._v(" "),v("p",[_._v("我们通过讲解TCP和UDP的区别，也知道它们对应的应用场景以及他们的关系。其实两者都是属于传输层的协议，为的就是传输数据是以何种方式而已。TCP的头部有20字节，协议传输会消耗更多的资源，但是保证数据的传输；而UDP头部只有8个字节，传输相对消耗较少，但是不保证数据的传输。")]),_._v(" "),v("p",[v("strong",[v("font",{attrs:{color:"green"}},[_._v("参考文章")])],1)]),_._v(" "),v("ul",[v("li",[_._v("维基百科 TCP/UDP")]),_._v(" "),v("li",[_._v("fundebug 一文TCP与UDP的区别")])]),_._v(" "),v("p",[v("img",{attrs:{src:"/common/2.gif",alt:""}})])])}),[],!1,null,null,null);v.default=s.exports}}]);