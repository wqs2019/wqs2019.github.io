(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{365:function(t,a,e){"use strict";e.r(a);var v=e(3),s=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v('"全方位总结一下所遇到的面试题目，与大家共同学习，也是对自己的一次总结"')])]),t._v(" "),a("p",[a("img",{attrs:{src:"/common/1.gif",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_01-前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_01-前言"}},[t._v("#")]),t._v(" 01 前言")]),t._v(" "),a("p",[t._v("2020是不平凡的一年，这一年里发生许多事情，大家也都知道。对于互联网行业来说也是一次重大的打击，也有一些企业在这次疫情中倒闭了，所以可能对于今年2020年毕业的同学来说是一次很大的考验，也关乎我们的前途。")]),t._v(" "),a("p",[t._v("今年的面试基本上都不会线下面试，都是采取线上电话/视频的形式来进行，今天我就总结一下，分享一下自己所遇到的一些面试题，希望大家在这次春招中能够拿到满意的offer！毕竟自己当初也是看了很多师兄姐的面经，算是一个回馈社区。共勉！")]),t._v(" "),a("h2",{attrs:{id:"_02-目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_02-目录"}},[t._v("#")]),t._v(" 02 目录")]),t._v(" "),a("p",[t._v("下面是这篇文章的目录结构，一般比较简单的问题我就一笔带过了，主要是分享一下比较有难度的知识点，答案来自网上，如果有版权问题我会删除。还有本文只是给出一个大概的知识点，如果想要深入学习还要靠自己去查一下哦！")]),t._v(" "),a("p",[t._v("如果答案有错误，欢迎指正！")]),t._v(" "),a("ul",[a("li",[t._v("计算机基础")]),t._v(" "),a("li",[t._v("前端基础（HTML/CSS）")]),t._v(" "),a("li",[t._v("JavaScript")]),t._v(" "),a("li",[t._v("前端框架")]),t._v(" "),a("li",[t._v("浏览器渲染")]),t._v(" "),a("li",[t._v("计算机网络")]),t._v(" "),a("li",[t._v("手写代码")]),t._v(" "),a("li",[t._v("Webpack")]),t._v(" "),a("li",[t._v("Node")]),t._v(" "),a("li",[t._v("ES6")])]),t._v(" "),a("h2",{attrs:{id:"_03-计算机基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_03-计算机基础"}},[t._v("#")]),t._v(" 03 计算机基础")]),t._v(" "),a("h5",{attrs:{id:"进程与线程的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程与线程的区别"}},[t._v("#")]),t._v(" "),a("strong",[t._v("进程与线程的区别")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/06/process/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("进程是系统进行资源分配和调度的一个独立单位")]),t._v(" "),a("li",[t._v("线程是CPU调度和分派的基本单位,它是比进程更小的能独立运行的基本单位")]),t._v(" "),a("li",[t._v("一个进程至少有一个线程组成")])]),t._v(" "),a("p",[t._v("线程自己基本上不拥有系统资源,只拥有一点在运行中必不可少的资源(如程序计数器,一组寄存器和栈)，但是它可与同属一个进程的其他的线程共享进程所拥有的全部资源")]),t._v(" "),a("h5",{attrs:{id:"进程间通信方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程间通信方式"}},[t._v("#")]),t._v(" "),a("strong",[t._v("进程间通信方式")])]),t._v(" "),a("ul",[a("li",[t._v("管道通信")]),t._v(" "),a("li",[t._v("消息队列通信")]),t._v(" "),a("li",[t._v("信号量通信")]),t._v(" "),a("li",[t._v("共享内存通信")]),t._v(" "),a("li",[t._v("套接字通信")])]),t._v(" "),a("h5",{attrs:{id:"函数库与系统库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数库与系统库"}},[t._v("#")]),t._v(" "),a("strong",[t._v("函数库与系统库")])]),t._v(" "),a("ul",[a("li",[t._v("系统库调用运行在内核模式，函数库运行在用户模式")]),t._v(" "),a("li",[t._v("系统调用是os提供的服务，处于内核态且不能直接调用，而要使用类似int 0x80的软中断陷入内核")]),t._v(" "),a("li",[t._v("库函数中有很大部分是对系统调用的封装")]),t._v(" "),a("li",[t._v("函数库属于过程调用，开销小；系统库需用户空间和内核上下文环境切换，开销大")]),t._v(" "),a("li",[t._v("用户态可以调用系统提供API接口调用内核来切换成内核态（中断方式）")])]),t._v(" "),a("h5",{attrs:{id:"二叉树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" "),a("strong",[t._v("二叉树")])]),t._v(" "),a("ul",[a("li",[t._v("二叉树每一个节点不能多于两个孩子")]),t._v(" "),a("li",[t._v("没有孩子的节点就是叶子节点")]),t._v(" "),a("li",[t._v("一个节点有左右两个指针，若无则指向null")]),t._v(" "),a("li",[t._v("深度为h的二叉树最多有2^h-1个结点(h>=1)，最少有h个结点")]),t._v(" "),a("li",[t._v("二叉树的遍历三种方式，如下：\n（1）前序遍历（DLR），首先访问根结点，然后遍历左子树，最后遍历右子树。简记根-左-右。\n（2）中序遍历（LDR），首先遍历左子树，然后访问根结点，最后遍历右子树。简记左-根-右。\n（3）后序遍历（LRD），首先遍历左子树，然后遍历右子树，最后访问根结点。简记左-右-根")])]),t._v(" "),a("h5",{attrs:{id:"数据库索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库索引"}},[t._v("#")]),t._v(" "),a("strong",[t._v("数据库索引")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("索引是一种数据结构（B+树）")])]),t._v(" "),a("li",[a("p",[t._v("不推荐使用索引")])])]),t._v(" "),a("p",[t._v("（1）表记录太少；\n（2）数据重复且分布平均的字段（只有很少数据值的列）；\n（3）经常插入、删除、修改的表要减少索引；")]),t._v(" "),a("ul",[a("li",[t._v("使用索引")])]),t._v(" "),a("p",[t._v("（1）主键，unique字段；\n（2）和其他表做连接的字段需要加索引；\n（3）在where里使用＞，≥，＝，＜，≤，is null和between等字段；\n（4）使用不以通配符开始的like，where object like 'Math%'；\n（5）order by和group by字段；")]),t._v(" "),a("h5",{attrs:{id:"数据库引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库引擎"}},[t._v("#")]),t._v(" "),a("strong",[t._v("数据库引擎")])]),t._v(" "),a("ul",[a("li",[t._v("InnoDB存储引擎")]),t._v(" "),a("li",[t._v("MyISAM存储引擎")]),t._v(" "),a("li",[t._v("MEMORY存储引擎")]),t._v(" "),a("li",[t._v("Archive存储引擎")])]),t._v(" "),a("h5",{attrs:{id:"虚拟内存及缓冲区溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟内存及缓冲区溢出"}},[t._v("#")]),t._v(" "),a("strong",[t._v("虚拟内存及缓冲区溢出")])]),t._v(" "),a("h6",{attrs:{id:"虚拟内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟内存"}},[t._v("#")]),t._v(" 虚拟内存")]),t._v(" "),a("ul",[a("li",[t._v("虚拟内存是计算机系统内存管理的一种技术")]),t._v(" "),a("li",[t._v("应用程序认为它拥有连续的可用的内存，实际分隔成多个物理内存碎片，还有部分暂时存储在外部磁盘存储器上")]),t._v(" "),a("li",[t._v("虚拟内存技术可以通过覆盖或者把处于不活动状态的程序以及它们的数据全部交换到磁盘上等方式来实现")])]),t._v(" "),a("h6",{attrs:{id:"缓冲区溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓冲区溢出"}},[t._v("#")]),t._v(" 缓冲区溢出")]),t._v(" "),a("ul",[a("li",[t._v("计算机向缓冲区填充数据时超出了缓冲区本身的容量，覆盖合法数据")])]),t._v(" "),a("h6",{attrs:{id:"危害"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#危害"}},[t._v("#")]),t._v(" 危害")]),t._v(" "),a("ul",[a("li",[t._v("堆栈溢出，可以改变返回程序地址")]),t._v(" "),a("li",[t._v("程序崩溃，拒绝服务")]),t._v(" "),a("li",[t._v("执行非法代码，获取非法权限")]),t._v(" "),a("li",[t._v("程序运行失败，系统宕机，重启")])]),t._v(" "),a("h5",{attrs:{id:"排序算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序算法"}},[t._v("#")]),t._v(" "),a("strong",[t._v("排序算法")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/18/jsSortMethods/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("快速排序（nlogn）")]),t._v(" "),a("li",[t._v("选择排序（n^2）")]),t._v(" "),a("li",[t._v("插入排序（n^2）")]),t._v(" "),a("li",[t._v("希尔排序（n^1.5）")]),t._v(" "),a("li",[t._v("归并排序（nlogn）")]),t._v(" "),a("li",[t._v("冒泡排序（n^2）")])]),t._v(" "),a("h5",{attrs:{id:"常用git指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用git指令"}},[t._v("#")]),t._v(" "),a("strong",[t._v("常用git指令")])]),t._v(" "),a("ul",[a("li",[t._v("下载一个项目和它的整个代码历史  git clone [url]")]),t._v(" "),a("li",[t._v("添加指定目录到暂存区，包括子目录   git add [dir]")]),t._v(" "),a("li",[t._v("提交暂存区到仓库区   git commit -m [修改信息]")]),t._v(" "),a("li",[t._v("同步到远程仓库， git　push")]),t._v(" "),a("li",[t._v("列出所有本地分支  git branch")]),t._v(" "),a("li",[t._v("新建一个分支，并切换到该分支  git checkout -b [branch]")])]),t._v(" "),a("h5",{attrs:{id:"路由器与交换机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由器与交换机"}},[t._v("#")]),t._v(" "),a("strong",[t._v("路由器与交换机")])]),t._v(" "),a("ul",[a("li",[t._v("路由器可以给你的局域网自动分配IP，交换机只是用来分配网络数据的")]),t._v(" "),a("li",[t._v("路由器在网络层，路由器根据IP地址寻址，路由器可以处理TCP/IP协议，交换机不可以")]),t._v(" "),a("li",[t._v("交换机在中继层，交换机根据MAC地址寻址")]),t._v(" "),a("li",[t._v("路由器提供防火墙的服务，交换机不能提供该功能")])]),t._v(" "),a("h2",{attrs:{id:"_04-前端基础-html-css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_04-前端基础-html-css"}},[t._v("#")]),t._v(" 04 前端基础（HTML/CSS）")]),t._v(" "),a("h5",{attrs:{id:"flex容器布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex容器布局"}},[t._v("#")]),t._v(" "),a("strong",[t._v("flex容器布局")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/18/flexLayout/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)])]),t._v(" "),a("h6",{attrs:{id:"主轴属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主轴属性"}},[t._v("#")]),t._v(" 主轴属性")]),t._v(" "),a("ul",[a("li",[t._v("flex-direction")]),t._v(" "),a("li",[t._v("flex-wrap")]),t._v(" "),a("li",[t._v("flex-flow")]),t._v(" "),a("li",[t._v("justify-content")]),t._v(" "),a("li",[t._v("align-items")]),t._v(" "),a("li",[t._v("align-content")])]),t._v(" "),a("h6",{attrs:{id:"交叉轴属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交叉轴属性"}},[t._v("#")]),t._v(" 交叉轴属性")]),t._v(" "),a("ul",[a("li",[t._v("order")]),t._v(" "),a("li",[t._v("flex-grow")]),t._v(" "),a("li",[t._v("flex-shrink")]),t._v(" "),a("li",[t._v("flex-basis")]),t._v(" "),a("li",[t._v("flex")]),t._v(" "),a("li",[t._v("align-self")])]),t._v(" "),a("h5",{attrs:{id:"bfc-ifc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc-ifc"}},[t._v("#")]),t._v(" "),a("strong",[t._v("BFC/IFC")])]),t._v(" "),a("p",[t._v('BFC（Block Formatting Context）叫做“块级格式化上下文"')]),t._v(" "),a("p",[t._v("（1）内部的盒子会在垂直方向，一个个地放置；\n（2）盒子垂直方向的距离由margin决定，属于同一个BFC的两个相邻Box的上下margin会发生重叠；\n（3）每个元素的左边，与包含的盒子的左边相接触，即使存在浮动也是如此；\n（4）BFC的区域不会与float重叠；\n（5）BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素，反之也如此；\n（6）计算BFC的高度时，浮动元素也参与计算。")]),t._v(" "),a("p",[t._v("触发条件\n（1）float的属性不为none；\n（2）position为absolute或fixed；\n（3）display为inline-block，table-cell，table-caption，flex；\n（4）overflow不为visible")]),t._v(" "),a("p",[t._v("IFC（inline Formatting Context）叫做“行级格式化上下”")]),t._v(" "),a("p",[t._v("（1）内部的盒子会在水平方向，一个个地放置；\n（2）IFC的高度，由里面最高盒子的高度决定；\n（3）当一行不够放置的时候会自动切换到下一行；")]),t._v(" "),a("h5",{attrs:{id:"css3的filter属性详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css3的filter属性详解"}},[t._v("#")]),t._v(" "),a("strong",[t._v("CSS3的filter属性详解")])]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/07/cssFilter/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("blur")])]),t._v(" "),a("li",[a("p",[t._v("brightness")])]),t._v(" "),a("li",[a("p",[t._v("contrast")])]),t._v(" "),a("li",[a("p",[t._v("grayscale")])]),t._v(" "),a("li",[a("p",[t._v("hue-rotate")])]),t._v(" "),a("li",[a("p",[t._v("invert")])]),t._v(" "),a("li",[a("p",[t._v("opacity")])]),t._v(" "),a("li",[a("p",[t._v("saturate")])]),t._v(" "),a("li",[a("p",[t._v("sepia")])])]),t._v(" "),a("h5",{attrs:{id:"css的继承属性-部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css的继承属性-部分"}},[t._v("#")]),t._v(" "),a("strong",[t._v("CSS的继承属性")]),t._v("（部分）")]),t._v(" "),a("ul",[a("li",[t._v("font-size：设置字体的尺寸")]),t._v(" "),a("li",[t._v("text-indent：文本缩进")]),t._v(" "),a("li",[t._v("text-align：文本水平对齐")]),t._v(" "),a("li",[t._v("text-shadow：设置文本阴影")]),t._v(" "),a("li",[t._v("line-height：行高")]),t._v(" "),a("li",[t._v("元素可见性：visibility")]),t._v(" "),a("li",[t._v("光标属性：cursor")])]),t._v(" "),a("h5",{attrs:{id:"css盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css盒模型"}},[t._v("#")]),t._v(" "),a("strong",[t._v("CSS盒模型")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("W3C 标准盒模型：\n属性width,height只包含内容content，不包含border和padding")])]),t._v(" "),a("li",[a("p",[t._v("IE 盒模型：\n属性width,height包含border和padding，指的是content+padding+border")])])]),t._v(" "),a("p",[t._v("content-box（标准盒模型）\nborder-box（IE盒模型）")]),t._v(" "),a("h5",{attrs:{id:"css的四种定位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css的四种定位"}},[t._v("#")]),t._v(" "),a("strong",[t._v("CSS的四种定位")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Static")])]),t._v(" "),a("p",[t._v("这个是元素的默认定位方式，元素出现在正常的文档流中，会占用页面空间。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Relative")])]),t._v(" "),a("p",[t._v("相对定位方式，相对于其父级元素（无论父级元素此时为何种定位方式）进行定位，准确地说是相对于其父级元素所剩余的未被占用的空间进行定位（在父元素由多个相对定位的子元素时可以看出），且会占用该元素在文档中初始的页面空间，即在使用top，bottom，left，right进行移动位置之后依旧不会改变其所占用空间的位置。可以使用z-index进行在z轴方向上的移动。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Absolute")])]),t._v(" "),a("p",[t._v("绝对定位方式，脱离文档流，不会占用页面空间。以最近的"),a("strong",[t._v("不是static定位的父级元素")]),t._v("作为参考进行定位，如果其所有的父级元素都是static定位，那么此元素最终则是以当前窗口作为参考进行定位。可以使用top，bottom，left，right进行位置移动，"),a("strong",[t._v("亦可使用z-index在z轴上面进行移动")]),t._v("。当元素为此定位时，如果该元素为内联元素，则会变为块级元素，即可以直接设置其宽和高的值；如果该元素为块级元素，则其宽度会由初始的100%变为auto。")]),t._v(" "),a("p",[t._v("注意：当元素设置为绝对定位时，在没有指定top，bottom，left，right的值时，他们的值并不是0，这几个值是有默认值的，默认值就是该元素设置为绝对定位前所处的正常文档流中的位置。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Fixed")])]),t._v(" "),a("p",[t._v("绝对定位方式，直接以浏览器窗口作为参考进行定位。其它特性同absolute定位。当父元素使用了transform的时候，会以父元素定位")])])]),t._v(" "),a("h5",{attrs:{id:"css权重计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css权重计算"}},[t._v("#")]),t._v(" "),a("strong",[t._v("CSS权重计算")])]),t._v(" "),a("ul",[a("li",[t._v('第一等级：代表内联样式，如style=""，权值为 1000')]),t._v(" "),a("li",[t._v("第二等级：代表id选择器，如#content，权值为100")]),t._v(" "),a("li",[t._v("第三等级：代表类，伪类和属性选择器，如.content，权值为10")]),t._v(" "),a("li",[t._v("第四等级：代表标签选择器和伪元素选择器，如div p，权值为1\n注意：通用选择器（*），子选择器（>），和相邻同胞选择器（+）并不在这个等级中，所以他们的权值为0")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/think/0e5256/1.jpg",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"css优化技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css优化技巧"}},[t._v("#")]),t._v(" "),a("strong",[t._v("CSS优化技巧")])]),t._v(" "),a("ul",[a("li",[t._v("合理使用选择器")]),t._v(" "),a("li",[t._v("减少DOM操作，减少重绘和重排")]),t._v(" "),a("li",[t._v("去除无效的选择器")]),t._v(" "),a("li",[t._v("文件压缩")]),t._v(" "),a("li",[t._v("异步加载文件")]),t._v(" "),a("li",[t._v("减少@import的使用")])]),t._v(" "),a("h5",{attrs:{id:"px-em-rem-vh-vw"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#px-em-rem-vh-vw"}},[t._v("#")]),t._v(" "),a("strong",[t._v("px/em/rem/vh/vw")])]),t._v(" "),a("ul",[a("li",[t._v("px像素（Pixel）。相对长度单位。像素px是相对于显示器屏幕分辨率而言的")]),t._v(" "),a("li",[t._v("em是相对长度单位。相对于当前父元素的字体尺寸。如未设置，则相对于浏览器的默认字体尺寸")]),t._v(" "),a("li",[t._v("rem是CSS3新增的一个相对单位。使用rem为元素设定字体大小时，仍然是相对大小，但相对的只是HTML根元素")]),t._v(" "),a("li",[t._v("css3新单位，view width的简写，是指可视窗口的宽度。假如宽度是1200px的话。那10vw就是120px")]),t._v(" "),a("li",[t._v("css3新单位，view height的简写，是指可视窗口的高度。假如高度是1200px的话。那10vh就是120px")])]),t._v(" "),a("h2",{attrs:{id:"_05-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_05-javascript"}},[t._v("#")]),t._v(" 05 JavaScript")]),t._v(" "),a("h5",{attrs:{id:"闭包以及作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包以及作用域"}},[t._v("#")]),t._v(" "),a("strong",[t._v("闭包以及作用域")])]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/04/this/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("作用域是可访问变量的集合，可以分为全局作用域和局部作用域。")])]),t._v(" "),a("li",[a("p",[t._v("闭包就是将函数内部和函数外部连接起来的一座桥梁")])]),t._v(" "),a("li",[a("p",[t._v("this是在函数运行时，在函数体内部自动生成的一个对象，只能在函数体内部使用")])])]),t._v(" "),a("h5",{attrs:{id:"事件循环机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件循环机制"}},[t._v("#")]),t._v(" "),a("strong",[t._v("事件循环机制")])]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/06/eventLoop/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("宏任务与微任务的区别")])]),t._v(" "),a("li",[a("p",[t._v("Node中的事件循环机制")])])]),t._v(" "),a("h5",{attrs:{id:"js垃圾回收与v8垃圾回收"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js垃圾回收与v8垃圾回收"}},[t._v("#")]),t._v(" "),a("strong",[t._v("JS垃圾回收与V8垃圾回收")])]),t._v(" "),a("ul",[a("li",[t._v("JS：标记清楚法/引用计数法")]),t._v(" "),a("li",[t._v("V8：标记清除发/标记压缩法/增量标记法/压缩算法  "),a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/03/nodeCollect/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)])]),t._v(" "),a("h5",{attrs:{id:"原型与原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型与原型链"}},[t._v("#")]),t._v(" "),a("strong",[t._v("原型与原型链")])]),t._v(" "),a("ul",[a("li",[t._v("所有原型链的终点都是 Object 函数的 prototype 属性")]),t._v(" "),a("li",[t._v("每一个构造函数都拥有一个 prototype 属性，此属性指向一个对象，也就是原型对象")]),t._v(" "),a("li",[t._v("原型对象默认拥有一个 constructor 属性，指向指向它的那个构造函数")]),t._v(" "),a("li",[t._v("每个对象都拥有一个隐藏的属性 __ proto __，指向它的原型对象")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/think/0e5256/1.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"javascript基本类型及其判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript基本类型及其判断"}},[t._v("#")]),t._v(" "),a("strong",[t._v("JavaScript基本类型及其判断")])]),t._v(" "),a("ul",[a("li",[t._v("boolean")]),t._v(" "),a("li",[t._v("string")]),t._v(" "),a("li",[t._v("number")]),t._v(" "),a("li",[t._v("null")]),t._v(" "),a("li",[t._v("undefined")]),t._v(" "),a("li",[t._v("symbol")]),t._v(" "),a("li",[t._v("object")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'[object Boolean]'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'boolean'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'[object Number]'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'[object String]'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'[object Function]'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'[object Array]'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'array'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'[object Date]'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'date'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'[object RegExp]'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'regExp'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'[object Undefined]'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'[object Null]'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'null'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'[object Object]'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("h5",{attrs:{id:"javascript数组api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript数组api"}},[t._v("#")]),t._v(" "),a("strong",[t._v("JavaScript数组API")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/18/jsArrayAPI/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("push()        pop()")]),t._v(" "),a("li",[t._v("shift()        unshift()")]),t._v(" "),a("li",[t._v("sort()         reverse()")]),t._v(" "),a("li",[t._v("concat()      slice()")]),t._v(" "),a("li",[t._v("splice()       join()")]),t._v(" "),a("li",[t._v("indexOf()     lastIndexOf()")]),t._v(" "),a("li",[t._v("forEach()      map()")]),t._v(" "),a("li",[t._v("filter()         every()")]),t._v(" "),a("li",[t._v("some()       reduce()")]),t._v(" "),a("li",[t._v("reduceRight()")])]),t._v(" "),a("h5",{attrs:{id:"javascript设计模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript设计模式"}},[t._v("#")]),t._v(" "),a("strong",[t._v("JavaScript设计模式")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/17/designMode/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("单例模式")]),t._v(" "),a("li",[t._v("适配器模式")]),t._v(" "),a("li",[t._v("代理模式")]),t._v(" "),a("li",[t._v("发布-订阅模式")]),t._v(" "),a("li",[t._v("策略模式")]),t._v(" "),a("li",[t._v("迭代器模式")])]),t._v(" "),a("h5",{attrs:{id:"操作节点api总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作节点api总结"}},[t._v("#")]),t._v(" "),a("strong",[t._v("操作节点API总结")])]),t._v(" "),a("h6",{attrs:{id:"查找节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找节点"}},[t._v("#")]),t._v(" 查找节点")]),t._v(" "),a("ul",[a("li",[t._v("document.getElementById ：根据ID查找元素，大小写敏感，如果有多个结果，只返回第一个")]),t._v(" "),a("li",[t._v("document.getElementsByClassName ：根据类名查找元素，多个类名用空格分隔，返回一个 HTMLCollection 。")]),t._v(" "),a("li",[t._v("document.getElementsByTagName ：根据标签查找元素， * 表示查询所有标签，返回一个 HTMLCollection 。")]),t._v(" "),a("li",[t._v("document.getElementsByName ：根据元素的name属性查找，返回一个 NodeList 。")]),t._v(" "),a("li",[t._v("document.querySelector ：返回单个Node，如果匹配到多个结果，只返回第一个。")]),t._v(" "),a("li",[t._v("document.querySelectorAll ：返回一个 NodeList。")]),t._v(" "),a("li",[t._v("document.forms ：获取当前页面所有form，返回一个 HTMLCollection ；")])]),t._v(" "),a("h6",{attrs:{id:"创建节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建节点"}},[t._v("#")]),t._v(" 创建节点")]),t._v(" "),a("ul",[a("li",[t._v("createElement创建元素")]),t._v(" "),a("li",[t._v("createTextNode创建文本节点")]),t._v(" "),a("li",[t._v("cloneNode 克隆一个节点")]),t._v(" "),a("li",[t._v("createDocumentFragment 创建文档碎片，主要是用来存储临时节点，大量操作DOM时用它可以大大提升性能")])]),t._v(" "),a("h6",{attrs:{id:"修改节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改节点"}},[t._v("#")]),t._v(" 修改节点")]),t._v(" "),a("ul",[a("li",[t._v("appendChild")]),t._v(" "),a("li",[t._v("insertBefore")]),t._v(" "),a("li",[t._v("removeChild")]),t._v(" "),a("li",[t._v("replaceChild")])]),t._v(" "),a("h2",{attrs:{id:"_06-前端框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_06-前端框架"}},[t._v("#")]),t._v(" 06 前端框架")]),t._v(" "),a("h5",{attrs:{id:"vue的双向数据绑定原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue的双向数据绑定原理"}},[t._v("#")]),t._v(" "),a("strong",[t._v("vue的双向数据绑定原理")])]),t._v(" "),a("ul",[a("li",[t._v("监听器 Observer ，用来劫持并监听所有属性（转变成setter/getter形式），如果属性发生变化，就通知订阅者")]),t._v(" "),a("li",[t._v("订阅器 Dep，用来收集订阅者，对监听器 Observer 和 订阅者 Watcher 进行统一管理")]),t._v(" "),a("li",[t._v("订阅者 Watcher，可以收到属性的变化通知并执行相应的方法，从而更新视图")]),t._v(" "),a("li",[t._v("解析器 Compile，可以解析每个节点的相关指令，对模板数据和订阅器进行初始化")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/think/0e5256/2.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"vue不能检测哪些属性变化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue不能检测哪些属性变化"}},[t._v("#")]),t._v(" "),a("strong",[t._v("vue不能检测哪些属性变化")])]),t._v(" "),a("h6",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),a("ul",[a("li",[t._v("使用下标更新数组元素")]),t._v(" "),a("li",[t._v("使用赋值方式改变数组长度")]),t._v(" "),a("li",[t._v("使用下标增删数组元素")])]),t._v(" "),a("p",[t._v("官方应对方法：")]),t._v(" "),a("ul",[a("li",[t._v("Vue.set( target, key, value )")]),t._v(" "),a("li",[t._v("vm.items.splice(indexOfItem, 1, newValue)")])]),t._v(" "),a("h6",{attrs:{id:"对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),a("ul",[a("li",[t._v("增删元素")])]),t._v(" "),a("p",[t._v("官方应对方法：")]),t._v(" "),a("ul",[a("li",[t._v("Vue.set(target,  propertyName, value);")]),t._v(" "),a("li",[t._v("Vue.delete( target, propertyName/index )")])]),t._v(" "),a("h5",{attrs:{id:"虚拟dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom"}},[t._v("#")]),t._v(" "),a("strong",[t._v("虚拟DOM")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/03/virtualDom/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("用 JavaScript 对象模拟真实 DOM 树，对真实 DOM 进行抽象")]),t._v(" "),a("li",[t._v("diff 算法 — 比较两棵虚拟 DOM 树的差异")]),t._v(" "),a("li",[t._v("pach 算法 — 将两个虚拟 DOM 对象的差异应用到真正的 DOM 树")])]),t._v(" "),a("h5",{attrs:{id:"vue模板解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue模板解析"}},[t._v("#")]),t._v(" "),a("strong",[t._v("vue模板解析")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/08/vueTemplate/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("模板变成AST（解析器）")]),t._v(" "),a("li",[t._v("AST遍历静态节点（优化器）")]),t._v(" "),a("li",[t._v("生成渲染函数（代码生成器）")])]),t._v(" "),a("h5",{attrs:{id:"diff算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diff算法"}},[t._v("#")]),t._v(" "),a("strong",[t._v("diff算法")])]),t._v(" "),a("ul",[a("li",[t._v("diff算法是比对组件中的节点异同的情况")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/think/0e5256/3.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"vue的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue的生命周期"}},[t._v("#")]),t._v(" "),a("strong",[t._v("vue的生命周期")])]),t._v(" "),a("ul",[a("li",[t._v("beforeCreate")]),t._v(" "),a("li",[t._v("created")]),t._v(" "),a("li",[t._v("beforeMount")]),t._v(" "),a("li",[t._v("mounted")]),t._v(" "),a("li",[t._v("beforeUpdate")]),t._v(" "),a("li",[t._v("updated")]),t._v(" "),a("li",[t._v("beforeDestroy")]),t._v(" "),a("li",[t._v("destroyed")]),t._v(" "),a("li",[t._v("activated")]),t._v(" "),a("li",[t._v("deactivated")]),t._v(" "),a("li",[t._v("erroeCaptured")])]),t._v(" "),a("h5",{attrs:{id:"vuex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" "),a("strong",[t._v("vuex")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/10/vuex/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("state：用于数据的存储，是store中的唯一数据源")]),t._v(" "),a("li",[t._v("getters：如vue中的计算属性一样，基于state数据的二次包装，常用于数据的筛选和多个数据的相关性计算")]),t._v(" "),a("li",[t._v("mutation：类似函数，改变state数据的唯一途径，且不能用于处理异步事件")]),t._v(" "),a("li",[t._v("action：类似于mutation，用于提交mutation来改变状态，而不直接变更状态，可以包含任意异步操作")]),t._v(" "),a("li",[t._v("modules：类似于命名空间，用于项目中将各个模块的状态分开定义和操作，便于维护")])]),t._v(" "),a("h5",{attrs:{id:"vue组件通信方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue组件通信方式"}},[t._v("#")]),t._v(" "),a("strong",[t._v("vue组件通信方式")])]),t._v(" "),a("ul",[a("li",[t._v("props / $emit 适用 父子组件通信")]),t._v(" "),a("li",[t._v("ref 与 $parent / $children 适用 父子组件通信")]),t._v(" "),a("li",[t._v("EventBus （$emit / $on） 适用于 父子、隔代、兄弟组件通信")]),t._v(" "),a("li",[t._v("$attrs/$listeners 适用于 隔代组件通信")]),t._v(" "),a("li",[t._v("provide / inject 适用于 隔代组件通信")]),t._v(" "),a("li",[t._v("Vuex 适用于 父子、隔代、兄弟组件通信")])]),t._v(" "),a("h5",{attrs:{id:"watch-computed的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watch-computed的区别"}},[t._v("#")]),t._v(" "),a("strong",[t._v("watch/computed的区别")])]),t._v(" "),a("ul",[a("li",[t._v("computed是计算属性，依赖其它属性值，并且 computed 的值有缓存，只有它依赖的属性值发生改变，下一次获取 computed 的值时才会重新计算 computed 的值")]),t._v(" "),a("li",[t._v("watch是观察监听的作用，类似于某些数据的监听回调 ，每当监听的数据变化时都会执行回调进行后续操作")]),t._v(" "),a("li",[t._v("当我们需要进行数值计算，并且依赖于其它数据时，应该使用 computed")]),t._v(" "),a("li",[t._v("当我们需要在数据变化时执行异步或开销较大的操作时，应该使用 watch")])]),t._v(" "),a("h5",{attrs:{id:"v-if与v-show的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-if与v-show的区别"}},[t._v("#")]),t._v(" "),a("strong",[t._v("v-if与v-show的区别")])]),t._v(" "),a("ul",[a("li",[t._v("v-if 是真正的条件渲染，直到条件第一次变为真时，才会开始渲染")]),t._v(" "),a("li",[t._v("v-show是由display样式决定，不管初始条件是什么都会渲染")]),t._v(" "),a("li",[t._v("v-if 适用于不需要频繁切换条件的场景；v-show 则适用于需要非常频繁切换条件的场景")])]),t._v(" "),a("h5",{attrs:{id:"vue中的路由模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue中的路由模式"}},[t._v("#")]),t._v(" "),a("strong",[t._v("vue中的路由模式")])]),t._v(" "),a("h6",{attrs:{id:"history模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history模式"}},[t._v("#")]),t._v(" history模式")]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[t._v("HTML5中的两个API：pushState和replaceState，改变url之后页面不会重新刷新，也不会带有#号，页面地址美观，url的改变会触发popState事件，监听该事件也可以实现根据不同的url渲染对应的页面内容")]),t._v(" "),a("li",[t._v("但是因为没有#会导致用户在刷新页面的时候，还会发送请求到服务端，为避免这种情况，需要每次url改变的时候，都将所有的路由重新定位到跟路由下")])])])]),t._v(" "),a("h6",{attrs:{id:"hash模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash模式"}},[t._v("#")]),t._v(" hash模式")]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[t._v("url hash: http 😕/foo.com/#help")]),t._v(" "),a("li",[t._v("#后面hash值的改变，并不会重新加载页面，同时hash值的变化会触发hashchange事件，该事件可以监听，可根据不同的哈希值渲染不同的页面内容")])])])]),t._v(" "),a("h5",{attrs:{id:"vue-3-0中proxy数据双向绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-0中proxy数据双向绑定"}},[t._v("#")]),t._v(" "),a("strong",[t._v("vue 3.0中proxy数据双向绑定")])]),t._v(" "),a("ul",[a("li",[t._v("Proxy 可以直接监听对象而非属性；")]),t._v(" "),a("li",[t._v("Proxy 可以直接监听数组的变化；")]),t._v(" "),a("li",[t._v("Proxy 有多达 13 种拦截方法,不限于 apply、ownKeys、deleteProperty、has 等等是 Object.defineProperty 不具备的；")]),t._v(" "),a("li",[t._v("Proxy 返回的是一个新对象,我们可以只操作新的对象达到目的,而 Object.defineProperty 只能遍历对象属性直接修改；")]),t._v(" "),a("li",[t._v("Proxy 作为新标准将受到浏览器厂商重点持续的性能优化，也就是传说中的新标准的性能红利；")])]),t._v(" "),a("h2",{attrs:{id:"_07-浏览器渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_07-浏览器渲染"}},[t._v("#")]),t._v(" 07 浏览器渲染")]),t._v(" "),a("h5",{attrs:{id:"输入网址到现实的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入网址到现实的过程"}},[t._v("#")]),t._v(" "),a("strong",[t._v("输入网址到现实的过程")])]),t._v(" "),a("ol",[a("li",[t._v("重定向")]),t._v(" "),a("li",[t._v("查看缓存")]),t._v(" "),a("li",[t._v("DNS解析，获取IP地址")]),t._v(" "),a("li",[t._v("TCP连接建立")]),t._v(" "),a("li",[t._v("发送报文请求")]),t._v(" "),a("li",[t._v("响应报文数据")]),t._v(" "),a("li",[t._v("浏览器解析数据")]),t._v(" "),a("li",[t._v("渲染")])]),t._v(" "),a("p",[t._v("补充：这里值得注意的是，很多同学都会忽略"),a("strong",[t._v("重定向")]),t._v("这个过程，其实重定向是一个很重要的部分。我们尝试使用webpagetest工具测试一下百度的网址。")]),t._v(" "),a("p",[t._v("第一次是输入 https://baidu.com后测试的效果")]),t._v(" "),a("p",[a("img",{attrs:{src:"/think/0e5256/4.png",alt:""}})]),t._v(" "),a("p",[t._v("第二次是输入https://www.baidu.com后测试的效果，可见两次请求相差1.8s左右，这是一个很慢的过程。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/think/0e5256/5.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"节流与防抖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节流与防抖"}},[t._v("#")]),t._v(" "),a("strong",[t._v("节流与防抖")])]),t._v(" "),a("h6",{attrs:{id:"节流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节流"}},[t._v("#")]),t._v(" 节流")]),t._v(" "),a("p",[t._v("比如公交车站等车，每经过30分钟就会发车，不管后面还有没有人都会发车。这就是节流的过程。")]),t._v(" "),a("h6",{attrs:{id:"防抖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防抖"}},[t._v("#")]),t._v(" 防抖")]),t._v(" "),a("p",[t._v("以最后一个乘客为准，再等30分钟，如果30分钟内都没有人上车，就会发车。如果在期间有人上车，那么重新等30分钟。这就是防抖的过程。")]),t._v(" "),a("h5",{attrs:{id:"浏览器缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[t._v("#")]),t._v(" "),a("strong",[t._v("浏览器缓存")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/01/31/navigatorCache/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("h6",{attrs:{id:"缓存位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存位置"}},[t._v("#")]),t._v(" 缓存位置")]),t._v(" "),a("ul",[a("li",[t._v("Service Worker")]),t._v(" "),a("li",[t._v("Menory Cache")]),t._v(" "),a("li",[t._v("Disk Cache")]),t._v(" "),a("li",[t._v("Push Cache")])]),t._v(" "),a("h6",{attrs:{id:"缓存策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存策略"}},[t._v("#")]),t._v(" 缓存策略")]),t._v(" "),a("ul",[a("li",[t._v("强缓存")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Expires:Wed, 22 Oct 2018 08:41:00 GMT\nCache-control:Cache-control: max-age=30\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[t._v("协商缓存")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Last-Modified\nIf-Modified-Since\nETag\nIf-None-Match\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h5",{attrs:{id:"bom对象模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bom对象模型"}},[t._v("#")]),t._v(" "),a("strong",[t._v("BOM对象模型")])]),t._v(" "),a("ul",[a("li",[t._v("screen")]),t._v(" "),a("li",[t._v("window")]),t._v(" "),a("li",[t._v("navigator")]),t._v(" "),a("li",[t._v("location")]),t._v(" "),a("li",[t._v("document")]),t._v(" "),a("li",[t._v("history")])]),t._v(" "),a("h5",{attrs:{id:"location对象属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#location对象属性"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Location对象属性")])]),t._v(" "),a("ul",[a("li",[t._v("hash               设置或返回从#开始的URL")]),t._v(" "),a("li",[t._v("host               设置或返回主机名和当前URL的端口号")]),t._v(" "),a("li",[t._v("hostname       设置或返回当前URL的主机名")]),t._v(" "),a("li",[t._v("href                 设置或返回完整的URL")]),t._v(" "),a("li",[t._v("pathname       设置或返回当前URL的路径部分")]),t._v(" "),a("li",[t._v("port                 设置或返回当前URL的端口号")]),t._v(" "),a("li",[t._v("search             设置或返回从?开始的URL(查询部分)")])]),t._v(" "),a("h5",{attrs:{id:"跨域相关问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域相关问题"}},[t._v("#")]),t._v(" "),a("strong",[t._v("跨域相关问题")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/06/crossOrigin/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("JSONP")]),t._v(" "),a("li",[t._v("CORS")]),t._v(" "),a("li",[t._v("document.domain")]),t._v(" "),a("li",[t._v("postMessage")]),t._v(" "),a("li",[t._v("nginx")]),t._v(" "),a("li",[t._v("window.name")])]),t._v(" "),a("h5",{attrs:{id:"cookie与session"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie与session"}},[t._v("#")]),t._v(" "),a("strong",[t._v("cookie与session")])]),t._v(" "),a("ul",[a("li",[t._v("cookie保存在客户端（浏览器）；session保存在服务端（redis）")]),t._v(" "),a("li",[t._v("Session是由应用服务器维持的一个服务器端的存储空间，用户在连接服务器时，会由服务器生成一个唯一的SessionID,用该SessionID 为标识符来存取服务器端的Session存储空间")])]),t._v(" "),a("p",[t._v("例子：")]),t._v(" "),a("p",[t._v("当客户端第一次请求登录服务器的时候，服务器随机下发一个字符串sessionId给浏览器，以cookie的形式保存在客户端。当下次登录的时候会带上这个cookie，从而识别你是谁。")]),t._v(" "),a("p",[t._v("cookie的优点：")]),t._v(" "),a("p",[t._v("1.极高的扩展性和可用性\n2.通过良好的编程，控制保存在cookie中的session对象的大小。\n3.通过加密和安全传输技术（SSL），减少cookie被破解的可能性。\n4.只在cookie中存放不敏感数据，即使被盗也不会有重大损失。\n5.控制cookie的生命期，使之不会永远有效。偷盗者很可能拿到一个过期的cookie。")]),t._v(" "),a("p",[t._v("cookie的缺点：")]),t._v(" "),a("p",[t._v("1.cookie数量和长度的限制。每个domain最多只能有20条cookie，每个cookie长度不能超过4KB，否则会被截掉。\n2.安全性问题。如果cookie被人拦截了，那人就可以取得所有的session信息。即使加密也与事无补，因为拦截者并不需要知道cookie的意义，他只要原样转发cookie就可以达到目的了。\n3.有些状态不可能保存在客户端。例如，为了防止重复提交表单，我们需要在服务器端保存一个计数器。如果我们把这个计数器保存在客户端，那么它起不到任何作用。")]),t._v(" "),a("h5",{attrs:{id:"浏览器存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器存储"}},[t._v("#")]),t._v(" "),a("strong",[t._v("浏览器存储")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("特性")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("cookie")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("localStorage")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("sessionStorage")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("indexDB")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("数据生命周期")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("一般由服务器生成，可以设置过期时间")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("除非被清理，否则一直存在")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("页面关闭就清理")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("除非被清理，否则一直存在")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("数据存储大小")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("4K")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("5M")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("5M")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("无限")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("与服务端通信")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("每次都会携带在 header 中，对于请求性能影响")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不参与")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不参与")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不参与")])])])]),t._v(" "),a("h5",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" ****")]),t._v(" "),a("h2",{attrs:{id:"_08-计算机网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_08-计算机网络"}},[t._v("#")]),t._v(" 08 计算机网络")]),t._v(" "),a("h5",{attrs:{id:"tcp-udp协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-udp协议"}},[t._v("#")]),t._v(" "),a("strong",[t._v("TCP/UDP协议")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/05/tcpAndUdp/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("TCP是一种面向来连接的、可靠的、基于字节流的传输层通信协议。在计算机网络的OSI模型中，它完成第四层传输层所指定的功能。")]),t._v(" "),a("ul",[a("li",[t._v("面向连接")]),t._v(" "),a("li",[t._v("仅支持单播传输")]),t._v(" "),a("li",[t._v("面向字节流")]),t._v(" "),a("li",[t._v("可靠传输")]),t._v(" "),a("li",[t._v("提供全双工通信")])]),t._v(" "),a("p",[t._v("UDP是一种简单的面向数据报、面向无连接、不可靠的通信协议，位于OSI模型的传输层。在网络中它与TCP协议一样用于处理数据包，是一种无连接的协议。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("面向无连接")])]),t._v(" "),a("li",[a("p",[t._v("不可靠传输")])]),t._v(" "),a("li",[a("p",[t._v("提供单播、多播和广播")])]),t._v(" "),a("li",[a("p",[t._v("面向报文")])])]),t._v(" "),a("h5",{attrs:{id:"tcp如何保证数据传输"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp如何保证数据传输"}},[t._v("#")]),t._v(" "),a("strong",[t._v("TCP如何保证数据传输")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/07/howToEnsureTcp/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("检验和")]),t._v(" "),a("li",[t._v("序列号/确认应答")]),t._v(" "),a("li",[t._v("超时重传")]),t._v(" "),a("li",[t._v("最大消息长度")]),t._v(" "),a("li",[t._v("滑动窗口控制")]),t._v(" "),a("li",[t._v("拥塞控制")])]),t._v(" "),a("h5",{attrs:{id:"get-post的本质区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-post的本质区别"}},[t._v("#")]),t._v(" "),a("strong",[t._v("GET/POST的本质区别")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/18/getandpost/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("GET/POST的最大区别是GET请求有幂等性，但是POST请求没有。什么是幂等性呢？我们知道使用GET方法请求同样的接口，返回来的数据是不会改变的，但是对于POST请求，实现一些增删改查的操作的时候可能会发生重复提交的问题。")]),t._v(" "),a("p",[t._v("也就是说我们如果使用GET请求做增删改查的时候，遇到网络不好可能会多次操作，造成数据库的混乱，这是一个很严重的问题，但是使用POST就不会有这种情况。")]),t._v(" "),a("h5",{attrs:{id:"http与https的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http与https的区别"}},[t._v("#")]),t._v(" "),a("strong",[t._v("http与https的区别")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/08/https/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("h6",{attrs:{id:"https握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https握手"}},[t._v("#")]),t._v(" https握手")]),t._v(" "),a("ul",[a("li",[t._v("首先客户端发起请求到服务端，服务端处理后发送一个公钥给客户端")]),t._v(" "),a("li",[t._v("客户端进行验证公钥，看公钥是否有效和是否过期")]),t._v(" "),a("li",[t._v("客户端验证通过会产生随机值key，然后用公钥进行加密回传给服务端")]),t._v(" "),a("li",[t._v("服务端用私钥解密后获得客户端的随机值key")]),t._v(" "),a("li",[t._v("利用随机值key加密数据后传输给客户端")]),t._v(" "),a("li",[t._v("客户端利用key值进行解密数据")]),t._v(" "),a("li",[t._v("客户端获取真正的数据")])]),t._v(" "),a("h5",{attrs:{id:"cdn的优化原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn的优化原理"}},[t._v("#")]),t._v(" "),a("strong",[t._v("CDN的优化原理")])]),t._v(" "),a("p",[t._v("CDN的全称是(Content Delivery Network)，即内容分发网络。其目的是通过在现有的Internet中增加一层新的CACHE(缓存)层，将网站的内容发布到最接近用户的网络”边缘“的节点，使用户可以就近取得所需的内容，提高用户访问网站的响应速度。")]),t._v(" "),a("p",[t._v("CDN的工作原理就是将您源站的资源缓存到位于全球各地的CDN节点上，用户请求资源时，就近返回节点上缓存的资源，而不需要每个用户的请求都回您的源站获取，避免网络拥塞、缓解源站压力，保证用户访问资源的速度和体验")]),t._v(" "),a("p",[a("img",{attrs:{src:"/think/0e5256/6.png",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"http-2-0-的新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-2-0-的新特性"}},[t._v("#")]),t._v(" "),a("strong",[t._v("HTTP 2.0 的新特性")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/03/http2/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("二进制分帧")]),t._v(" "),a("li",[t._v("多路复用")]),t._v(" "),a("li",[t._v("首部压缩")]),t._v(" "),a("li",[t._v("流量控制")]),t._v(" "),a("li",[t._v("请求优先级")]),t._v(" "),a("li",[t._v("服务器推送")])]),t._v(" "),a("h5",{attrs:{id:"常见http首部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见http首部"}},[t._v("#")]),t._v(" "),a("strong",[t._v("常见HTTP首部")])]),t._v(" "),a("h6",{attrs:{id:"通用首部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用首部"}},[t._v("#")]),t._v(" 通用首部")]),t._v(" "),a("ul",[a("li",[t._v("Cache-Control: 控制缓存的行为")]),t._v(" "),a("li",[t._v("Connection：逐跳首部，连接的管理")]),t._v(" "),a("li",[t._v("Date：创建报文的日期时间")]),t._v(" "),a("li",[t._v("Pragma：报文指令")]),t._v(" "),a("li",[t._v("Trailer：报文末端的首部一览")]),t._v(" "),a("li",[t._v("Transfer-Encoding：指定报文主体的传输编码方式")]),t._v(" "),a("li",[t._v("Upgrade：升级为其他协议")])]),t._v(" "),a("h6",{attrs:{id:"请求首部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求首部"}},[t._v("#")]),t._v(" 请求首部")]),t._v(" "),a("ul",[a("li",[t._v("Accept: 用户代理可处理的媒体类型")]),t._v(" "),a("li",[t._v("Accept-Charset: 优先的字符集")]),t._v(" "),a("li",[t._v("Accept-Encoding: 优先的内容编码")]),t._v(" "),a("li",[t._v("Accept-Language: 优先的语言")]),t._v(" "),a("li",[t._v("Authorization: web 认证信息")]),t._v(" "),a("li",[t._v("From: 用户的电子邮箱地址")]),t._v(" "),a("li",[t._v("Host: 请求资源所在服务器")]),t._v(" "),a("li",[t._v("if-Match: 比较实体标记")]),t._v(" "),a("li",[t._v("if-Modified-Since: 比较资源的更新时间")]),t._v(" "),a("li",[t._v("if-None-Match: 比较实体标记（与if-Match相反）")]),t._v(" "),a("li",[t._v("if-Range: 资源为更新时发送实体Byte的范围请求")]),t._v(" "),a("li",[t._v("if-Unmodified-Since: 比较资源的更新时间")]),t._v(" "),a("li",[t._v("Referer: 对请求中的 Url 的原始获取方法")]),t._v(" "),a("li",[t._v("User-Agent: HTTP 客户端程序的信息")])]),t._v(" "),a("h6",{attrs:{id:"响应首部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应首部"}},[t._v("#")]),t._v(" 响应首部")]),t._v(" "),a("ul",[a("li",[t._v("Accept-Ranges: 是否接受字节范围请求")]),t._v(" "),a("li",[t._v("Age: 推算资源创建经过时间")]),t._v(" "),a("li",[t._v("ETag: 资源的匹配信息")]),t._v(" "),a("li",[t._v("Location: 令客户端重定向至指定的URL")]),t._v(" "),a("li",[t._v("Proxy-Authenticate: 代理服务器对客户端的认证信息")]),t._v(" "),a("li",[t._v("Rety-After: 对再次发起请求的时机要求")]),t._v(" "),a("li",[t._v("Server: HTTP服务器的安装信息")]),t._v(" "),a("li",[t._v("Vary: 代理服务器缓存的管理信息")]),t._v(" "),a("li",[t._v("WWW-Authenticate: 服务器对客户端的认证信息")])]),t._v(" "),a("h5",{attrs:{id:"web安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web安全"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Web安全")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/18/webSecurity/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("浏览器安全")]),t._v(" "),a("li",[t._v("跨站脚本攻击(XSS)")]),t._v(" "),a("li",[t._v("跨站请求伪造(CSRF)")]),t._v(" "),a("li",[t._v("点击劫持(ClickJacking)")])]),t._v(" "),a("h5",{attrs:{id:"扫码登录实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扫码登录实现原理"}},[t._v("#")]),t._v(" "),a("strong",[t._v("扫码登录实现原理")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/03/scanCodeToLogin/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("h6",{attrs:{id:"二维码与网页服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二维码与网页服务器"}},[t._v("#")]),t._v(" 二维码与网页服务器")]),t._v(" "),a("p",[t._v("当我们打开微信的网页版的时候，查看控制台发现发送了一个请求登录的请求，然后网页服务器就随机产生了一个uuid返回给浏览器，而且这个uuid是和二维码绑定在一起的。服务器会把uuid作为key存进redis缓存服务器里面，类似 uuid：xxxx 的形式。")]),t._v(" "),a("h6",{attrs:{id:"二维码与手机服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二维码与手机服务器"}},[t._v("#")]),t._v(" 二维码与手机服务器")]),t._v(" "),a("p",[t._v("手机进行扫描二维码，然后手机携带uuid和用户信息向手机的服务器发送请求，手机服务器收到之后携带uuid去redis服务器查询用户，并把uuid与用户信息绑定在一起。查询用户成功之后返回一个Token给网页服务器，通过解析这个Token可以拿出用户的信息，然后浏览器就成功登录微信了。")]),t._v(" "),a("h5",{attrs:{id:"前后端鉴权"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前后端鉴权"}},[t._v("#")]),t._v(" "),a("strong",[t._v("前后端鉴权")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/04/Authorization/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("前后之间进行数据交互，当然后端要判断你是否是真正的操作者，只有符合条件的用户才可以操作。也就是说必须要有一个身份证明你是一个好人。通常会有四种方式：")]),t._v(" "),a("ul",[a("li",[t._v("HTTP Basic Authentication")]),t._v(" "),a("li",[t._v("session-cookie机制")]),t._v(" "),a("li",[t._v("Token验证")]),t._v(" "),a("li",[t._v("OAuth开放授权")])]),t._v(" "),a("h5",{attrs:{id:"单点登录的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单点登录的实现"}},[t._v("#")]),t._v(" "),a("strong",[t._v("单点登录的实现")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/03/singleSignOn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("实现一个认证中心，登录并保存用户信息")]),t._v(" "),a("li",[t._v("访问A系统先定向到认证中心")]),t._v(" "),a("li",[t._v("访问B系统先定向到认证中心")]),t._v(" "),a("li",[t._v("则A/B系统就可以间接打通")])]),t._v(" "),a("h5",{attrs:{id:"http请求方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http请求方法"}},[t._v("#")]),t._v(" "),a("strong",[t._v("HTTP请求方法")])]),t._v(" "),a("ul",[a("li",[t._v("head（获取报文首部）")]),t._v(" "),a("li",[t._v("put（传输文件）")]),t._v(" "),a("li",[t._v("delete（删除文件）")]),t._v(" "),a("li",[t._v("options（询问支持方法）")]),t._v(" "),a("li",[t._v("trace（追踪路径）")]),t._v(" "),a("li",[t._v("connect（要求用隧道协议连接代理）")])]),t._v(" "),a("h5",{attrs:{id:"ajax-axios-fetch区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax-axios-fetch区别"}},[t._v("#")]),t._v(" "),a("strong",[t._v("ajax/axios/fetch区别")])]),t._v(" "),a("h6",{attrs:{id:"ajax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" ajax")]),t._v(" "),a("ul",[a("li",[t._v("不符合现在前端MVVM的浪潮")]),t._v(" "),a("li",[t._v("基于原生的XHR开发，XHR本身的架构不清晰")]),t._v(" "),a("li",[t._v("jQuery整个项目太大，单纯使用ajax却要引入整个jQuery")])]),t._v(" "),a("h6",{attrs:{id:"axios"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#axios"}},[t._v("#")]),t._v(" axios")]),t._v(" "),a("ul",[a("li",[t._v("从 node.js 创建 http 请求")]),t._v(" "),a("li",[t._v("支持 Promise API")]),t._v(" "),a("li",[t._v("客户端支持防止CSRF")]),t._v(" "),a("li",[t._v("提供了一些并发请求的接口")])]),t._v(" "),a("h6",{attrs:{id:"fetch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetch"}},[t._v("#")]),t._v(" fetch")]),t._v(" "),a("ul",[a("li",[t._v("更加底层，提供的API丰富（request, response）")]),t._v(" "),a("li",[t._v("脱离了XHR，是ES规范里新的实现方式")]),t._v(" "),a("li",[t._v("fetch只对网络请求报错，对400，500都当做成功的请求，需要封装去处理")]),t._v(" "),a("li",[t._v("fetch默认不会带cookie，需要添加配置项")]),t._v(" "),a("li",[t._v("fetch没有办法原生监测请求的进度，而XHR可以")])]),t._v(" "),a("h5",{attrs:{id:"websocket通信原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#websocket通信原理"}},[t._v("#")]),t._v(" "),a("strong",[t._v("webSocket通信原理")])]),t._v(" "),a("ul",[a("li",[t._v("客户端会先发送一个HTTP请求，包含一个Upgrade请求头来告诉服务端要升级为WebSocket协议")]),t._v(" "),a("li",[t._v("服务器就会返回101状态码并切换为WebSocket协议建立全双工连接，后续信息将会通过这个协议进行传输")])]),t._v(" "),a("p",[t._v("有几个头信息需要注意一下：")]),t._v(" "),a("p",[t._v("Sec-WebSocket-Key：客户端随机生成的一个base64编码\nSec-WebSocket-Accept：服务端经过算法处理后回传给客户端\nConnection和Upgrade字段告诉服务器，客户端发起的是WebSocket协议请求")]),t._v(" "),a("h2",{attrs:{id:"_09-手写代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_09-手写代码"}},[t._v("#")]),t._v(" 09 手写代码")]),t._v(" "),a("p",[t._v("由于手写代码部分需要的篇幅比较多，我就简单列举出来需要熟悉哪一些手写的知识点，大家可以自行谷歌。")]),t._v(" "),a("ul",[a("li",[t._v("bind/call/apply")]),t._v(" "),a("li",[t._v("class与原形链实现继承")]),t._v(" "),a("li",[t._v("promise的简单版")]),t._v(" "),a("li",[t._v("深拷贝实现")]),t._v(" "),a("li",[t._v("节流与防抖函数")]),t._v(" "),a("li",[t._v("函数柯里化")]),t._v(" "),a("li",[t._v("new的原理实现")]),t._v(" "),a("li",[t._v("常用算法排序（快排）")]),t._v(" "),a("li",[t._v("常见设计模式")]),t._v(" "),a("li",[t._v("实现水平垂直居中")])]),t._v(" "),a("p",[a("strong",[t._v("重要的是多刷题，可以看剑指offer，leetcode！")])]),t._v(" "),a("h2",{attrs:{id:"_10-webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-webpack"}},[t._v("#")]),t._v(" 10 Webpack")]),t._v(" "),a("p",[t._v("webpack参考深入浅出webpack的书本内容，里面介绍非常到位，大家可以一看。")]),t._v(" "),a("h5",{attrs:{id:"webpack作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack作用"}},[t._v("#")]),t._v(" "),a("strong",[t._v("webpack作用")])]),t._v(" "),a("ul",[a("li",[t._v("代码转换")]),t._v(" "),a("li",[t._v("文件优化")]),t._v(" "),a("li",[t._v("代码分割")]),t._v(" "),a("li",[t._v("模块合并")]),t._v(" "),a("li",[t._v("自动刷新")]),t._v(" "),a("li",[t._v("代码校验")]),t._v(" "),a("li",[t._v("自动发布")])]),t._v(" "),a("h5",{attrs:{id:"打包原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包原理"}},[t._v("#")]),t._v(" "),a("strong",[t._v("打包原理")])]),t._v(" "),a("p",[t._v("（1）初始化参数：从配置文件和 Shell 语句中读取与合并参数，得出最终的参数；\n（2）开始编译：用上一步得到的参数初始化 Compiler 对象，加载所有配置的插件，通过执行对象的 run 方法开始执行编译；\n（3）确定入口：根据配置中的 entry 找出所有入口文件；\n（4）编译模块：从入口文件出发，调用所有配置的 Loader 对模块进行翻译，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理；\n（5）完成模块编译：在经过第 4 步使用 Loader 翻译完所有模块后，得到了每个模块被翻译后的最终内容及它们之间的依赖关系；\n（6）输出资源：根据入口和模块之间的依赖关系，组装成一个个包含多个模块的 Chunk，再将每个 Chunk 转换成一个单独的文件加入输出列表中，这是可以修改输出内容的最后机会；\n（7）输出完成：在确定好输出内容后，根据配置确定输出的路径和文件名，将文件的内容写入文件系统中；")]),t._v(" "),a("h5",{attrs:{id:"loader与plugin的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loader与plugin的区别"}},[t._v("#")]),t._v(" "),a("strong",[t._v("loader与plugin的区别")])]),t._v(" "),a("p",[t._v("loader，它是一个转换器，文件内容进行翻译，，比如将es6转换为es5，单纯的文件转换过程")]),t._v(" "),a("p",[t._v("plugin是一个扩展器，它丰富了webpack本身，针对是loader结束后。webpack打包的整个过程，它并不直接操作文件，而是基于事件机制工作，会监听webpack打包过程中的某些节点，并且执行相对应的任务")]),t._v(" "),a("h5",{attrs:{id:"happypack的原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#happypack的原理"}},[t._v("#")]),t._v(" "),a("strong",[t._v("HappyPack的原理")])]),t._v(" "),a("p",[t._v("webpack中最耗时的就是loader的转换过程，转换的流程很长。happypack的原理就是把这部分的任务拆解成多个子进程去并行处理，减少构建时间。")]),t._v(" "),a("p",[t._v("通过new HappyPack()实例化，然后把任务交由实例统一调度分配。核心调度器会将一个个任务分配给空闲的子进程。处理完毕后发送给核心调度器。")]),t._v(" "),a("h5",{attrs:{id:"如何优化webpack配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何优化webpack配置"}},[t._v("#")]),t._v(" "),a("strong",[t._v("如何优化webpack配置")])]),t._v(" "),a("h6",{attrs:{id:"缩小文件查找范围"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缩小文件查找范围"}},[t._v("#")]),t._v(" 缩小文件查找范围")]),t._v(" "),a("ul",[a("li",[t._v("优化loader")]),t._v(" "),a("li",[t._v("优化resolve.modules")]),t._v(" "),a("li",[t._v("优化resolve.mainFields")]),t._v(" "),a("li",[t._v("优化resolve.alias")]),t._v(" "),a("li",[t._v("优化resolve.extensions")]),t._v(" "),a("li",[t._v("优化module.noPaese")])]),t._v(" "),a("h6",{attrs:{id:"使用dllplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用dllplugin"}},[t._v("#")]),t._v(" 使用DllPlugin")]),t._v(" "),a("ul",[a("li",[t._v("基础模块抽离，打包到动态链接库")]),t._v(" "),a("li",[t._v("需要使用模块，直接去动态链接库查找")])]),t._v(" "),a("h6",{attrs:{id:"使用happypack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用happypack"}},[t._v("#")]),t._v(" 使用HappyPack")]),t._v(" "),a("ul",[a("li",[t._v("单线程变多进程")])]),t._v(" "),a("h6",{attrs:{id:"使用paralleluglifyplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用paralleluglifyplugin"}},[t._v("#")]),t._v(" 使用ParallelUglifyPlugin")]),t._v(" "),a("ul",[a("li",[t._v("开启多进程压缩代码，并行执行")])]),t._v(" "),a("h6",{attrs:{id:"使用cdn加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用cdn加速"}},[t._v("#")]),t._v(" 使用CDN加速")]),t._v(" "),a("ul",[a("li",[t._v("静态资源放到CDN服务器上面")])]),t._v(" "),a("h6",{attrs:{id:"tree-shaking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tree-shaking"}},[t._v("#")]),t._v(" Tree Shaking")]),t._v(" "),a("ul",[a("li",[t._v("剔除无用的代码")])]),t._v(" "),a("h6",{attrs:{id:"提取公共代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提取公共代码"}},[t._v("#")]),t._v(" 提取公共代码")]),t._v(" "),a("ul",[a("li",[t._v("防止相同资源重复加载")]),t._v(" "),a("li",[t._v("减少网络流量及服务器成本")])]),t._v(" "),a("h6",{attrs:{id:"使用prepack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用prepack"}},[t._v("#")]),t._v(" 使用prepack")]),t._v(" "),a("ul",[a("li",[t._v("编译代码时提前计算结果放到编译后的结果中，而不是在代码运行才求值")])]),t._v(" "),a("h2",{attrs:{id:"_11-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-node"}},[t._v("#")]),t._v(" 11 Node")]),t._v(" "),a("h5",{attrs:{id:"node的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node的特点"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Node的特点")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/03/nodeCharator/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("异步IO")]),t._v(" "),a("li",[t._v("事件驱动")]),t._v(" "),a("li",[t._v("单线程")]),t._v(" "),a("li",[t._v("跨平台")])]),t._v(" "),a("h5",{attrs:{id:"v8垃圾回收机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v8垃圾回收机制"}},[t._v("#")]),t._v(" "),a("strong",[t._v("V8垃圾回收机制")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/03/nodeCollect/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("新生代：Scavenge算法")]),t._v(" "),a("li",[t._v("老生代：Mark-Sweep算法、Mark-Compact算法、Incremental Marking算法")])]),t._v(" "),a("h5",{attrs:{id:"pm2进程守候"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pm2进程守候"}},[t._v("#")]),t._v(" "),a("strong",[t._v("PM2进程守候")])]),t._v(" "),a("ul",[a("li",[t._v("内建负载均衡（使用 Node cluster 集群模块）")]),t._v(" "),a("li",[t._v("后台运行")]),t._v(" "),a("li",[t._v("0 秒停机重载，我理解大概意思是维护升级的时候不需要停机.")]),t._v(" "),a("li",[t._v("具有 Ubuntu 和 CentOS 的启动脚本")]),t._v(" "),a("li",[t._v("停止不稳定的进程（避免无限循环）")]),t._v(" "),a("li",[t._v("控制台检测")]),t._v(" "),a("li",[t._v("提供 HTTP API")]),t._v(" "),a("li",[t._v("远程控制和实时的接口 API ( Nodejs 模块,允许和 PM2 进程管理器交互 )")])]),t._v(" "),a("h5",{attrs:{id:"buffer对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#buffer对象"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Buffer对象")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/04/buffer/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("Buffer是一个像Array的对象，它的元素都是16进制的两位数。是一个典型的JavaScript与C++结合的模块，设计性能的相关部分采用了C++实现，而非性能部分采用了JavaScript实现。"),a("strong",[t._v("Buffer对象可以用来操作二进制数据流")]),t._v("。")]),t._v(" "),a("li",[t._v("Buffer对象的内存分配不是在V8的堆内存中的，而是由Node的C++层面实现的内存申请的")])]),t._v(" "),a("p",[t._v("分配机制")]),t._v(" "),a("h6",{attrs:{id:"小对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小对象"}},[t._v("#")]),t._v(" 小对象")]),t._v(" "),a("p",[t._v("slab 内存分配机制**。它是一种动态内存管理机制，采用的是"),a("strong",[t._v("预先申请，事后分配")]),t._v("的方式，简单来说它就是一块申请好的固定大小的内存区域。有如下3种状态：")]),t._v(" "),a("ul",[a("li",[t._v("full：完全分配")]),t._v(" "),a("li",[t._v("partial：部分分配")]),t._v(" "),a("li",[t._v("empty：没有被分配")])]),t._v(" "),a("h6",{attrs:{id:"大对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大对象"}},[t._v("#")]),t._v(" 大对象")]),t._v(" "),a("p",[t._v("如果这个对象是超过了 slab 的大小，那么就不会占用slab块，直接使用C++层面分配你所需要的大小，这块空间就会被你一直占有")]),t._v(" "),a("h2",{attrs:{id:"_12-es6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-es6"}},[t._v("#")]),t._v(" 12 ES6")]),t._v(" "),a("h5",{attrs:{id:"promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" "),a("strong",[t._v("promise")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/06/promise/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("在阮一峰老师的ES6入门标准中说到，所谓promise就是一个容器，里面保存着某个未来才会结束的事件（通常是是一个异步事件）。它有两个特点：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("状态不受外界影响")]),t._v("：拥有三种状态（Pending、Fullfilled、Rejected）。状态只取决于异步执行结果，其他过程无法改变这个状态。")]),t._v(" "),a("li",[a("strong",[t._v("状态改变不会再变")]),t._v("：初始状态为Pending状态，它只可以变成Fullfill或者变成Rejected，但是一旦发生改变就不会再变。")])]),t._v(" "),a("p",[t._v("promise可以使得异步操作的写法像同步写法一样优雅，代码可读性更高。但是缺点就是中途无法取消promise，一旦新建就会执行，假如没有设置回调函数，Promise内部如果出现错误不会反应到外部。")]),t._v(" "),a("h6",{attrs:{id:"实例方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[t._v("#")]),t._v(" 实例方法")]),t._v(" "),a("ul",[a("li",[t._v("then()/catch()")]),t._v(" "),a("li",[t._v("all()/race()")]),t._v(" "),a("li",[t._v("resolve()/reject()")]),t._v(" "),a("li",[t._v("done()/finally()")])]),t._v(" "),a("h5",{attrs:{id:"proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proxy"}},[t._v("#")]),t._v(" "),a("strong",[t._v("proxy")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/04/proxy/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Proxy可以理解为，当你试图访问一个对象的时候必须先经过一个拦截或者代理，你才可以进行对对象的操作。这种机制的好处就是可以对外界的访问进行过滤和改写。")]),t._v(" "),a("ul",[a("li",[t._v("get(target, propKey, receiver) 拦截对象属性读取")]),t._v(" "),a("li",[t._v("set(target, propKey, value, receiver) 拦截对象的属性设置")]),t._v(" "),a("li",[t._v("has(target, propKey) 拦截propkey in proxy")]),t._v(" "),a("li",[t._v("deleteProperty(target, propKey) 拦截delete proxy[propKey]")]),t._v(" "),a("li",[t._v("ownKeys(target)")]),t._v(" "),a("li",[t._v("getOwnPropertyDescriptor(target, propKey) 返回对象属性的描述对象拦截")]),t._v(" "),a("li",[t._v("defineProperty(target, propKey, propDesc)")]),t._v(" "),a("li",[t._v("proventExtensions(target)")]),t._v(" "),a("li",[t._v("getPrototypeOf(target)")]),t._v(" "),a("li",[t._v("isExtensible(target)")]),t._v(" "),a("li",[t._v("setPrototypeOf(target, proto)")]),t._v(" "),a("li",[t._v("apply(target, object, args)")]),t._v(" "),a("li",[t._v("construct(target, args) 拦截 proxy 实例作为构造函数调用的操作")]),t._v(" "),a("li",[t._v("revocable(target, handler) 方法返回 一个可取消 Proxy实例")])]),t._v(" "),a("h6",{attrs:{id:"es6的新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6的新特性"}},[t._v("#")]),t._v(" "),a("strong",[t._v("ES6的新特性")])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://blog.alanwu.site/2020/03/11/ES6/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看详情"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("ES6新增了很多新特性，这里不可能每一个都详细讲述，面试中我遇到的有以下几个，你把它们都讲述清楚就可以过关了。")]),t._v(" "),a("ul",[a("li",[t._v("let、var、const区别")]),t._v(" "),a("li",[t._v("箭头函数")]),t._v(" "),a("li",[t._v("解构赋值")]),t._v(" "),a("li",[t._v("模板字符串")]),t._v(" "),a("li",[t._v("Set、Map数据结构")]),t._v(" "),a("li",[t._v("Promise对象")]),t._v(" "),a("li",[t._v("Proxy")])]),t._v(" "),a("h5",{attrs:{id:"class继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class继承"}},[t._v("#")]),t._v(" "),a("strong",[t._v("class继承")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" child "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nchild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nchild "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("h2",{attrs:{id:"_13-推荐书籍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-推荐书籍"}},[t._v("#")]),t._v(" 13 推荐书籍")]),t._v(" "),a("p",[t._v("《JavaScript高级程序设计》\n《ES6标准入门》\n《深入浅出NodeJS》\n《深入浅出webpack》\n《深入浅出vue.js》\n《JavaScript设计模式与开发实践》\n《图解HTTP》\n《图解TCP/IP》\n《剑指offer》")]),t._v(" "),a("h2",{attrs:{id:"_14-思考与感悟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-思考与感悟"}},[t._v("#")]),t._v(" 14 思考与感悟")]),t._v(" "),a("p",[t._v("其实整个备考的过程中，心态也是很重要的一部分，就好像我们当年高考的时候，心态一定要好。可能同学们经过很长的时间备考，然后投递了很多简历却没有面试机会。")]),t._v(" "),a("p",[t._v("首先要看一下是不是简历写得不好，一般没有机会大部分都是因为这个原因，可以找一下师兄姐聊一下如何修改简历。然后重新投递试试。或者有了面试机会却没有下轮面试了，那就是可能因为你的技术不够扎实，好好准备自己的基础，我推荐你：")]),t._v(" "),a("h5",{attrs:{id:"写技术博客"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写技术博客"}},[t._v("#")]),t._v(" "),a("strong",[t._v("写技术博客")])]),t._v(" "),a("p",[t._v("不用自己去搭建一个博客（要是可以就更好了），选择一个平台，CSDN或者掘金都是不错的平台，然后就可以开始你的表演了。可以写一些最近的学习心得，面试技巧以及黑科技工具的使用等等。写博客的好处有很多，不仅可以锻炼的表达逻辑，还可以巩固你的知识体系。两全其美，何乐而不为？")]),t._v(" "),a("p",[t._v("另外就是可以多逛一下技术社区，了解前端的动态，多关注最近出了什么新技术、新框架、新八卦等等。试着去帮别人解答一些问题，别人也很愿意去听，但是不要抬杠。乐于分享的心态比技术本身更重要。")]),t._v(" "),a("h5",{attrs:{id:"写项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写项目"}},[t._v("#")]),t._v(" "),a("strong",[t._v("写项目")])]),t._v(" "),a("p",[t._v("找一个idea，把之前所学的知识点用一下，或者用新的知识来重构一下旧的项目，都是一种产出的方法。如果你担心知识不够牢固可以上一下github找一些优质开源项目，看别人是怎么写的。项目中要把用到技术的那一块注释出来，不然过一个月都不知道是你写的。")]),t._v(" "),a("h5",{attrs:{id:"交流心得"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交流心得"}},[t._v("#")]),t._v(" "),a("strong",[t._v("交流心得")])]),t._v(" "),a("p",[t._v("要是可以的话，可以找同学一起交流最近的学习成果。技术学习的路上是枯燥的，找到相同的学习伙伴很重要，能够给你一种学下去的动力，两个相互切磋相互进步也是一种产出的方法。")]),t._v(" "),a("p",[t._v("面试。如果你觉得技术还可以，基础还不错的话就尝试去面试一下，面试官一般比你的层次高很多，知识储备也比你多，所以面试是一个非常重要的过程，还可以查漏补缺，完善自己的知识体系。")]),t._v(" "),a("p",[t._v("参考文章：")]),t._v(" "),a("ul",[a("li",[t._v("https://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html 常用 Git 命令清单")]),t._v(" "),a("li",[t._v("https://yq.aliyun.com/articles/636314 Mysql四种常见数据库引擎")]),t._v(" "),a("li",[t._v("https://www.nowcoder.com/discuss/258810?type=post&order=time&pos=&page=3 个人秋招经验总结（前端方向）")]),t._v(" "),a("li",[t._v("https://www.jianshu.com/p/2fa55947921d css四种定位")]),t._v(" "),a("li",[t._v("http://www.nowamagic.net/csszone/css_SeletorPriorityRules.php CSS选择器的权重与优先规则")]),t._v(" "),a("li",[t._v("https://www.runoob.com/w3cnote/px-em-rem-different.html px、em、rem区别介绍")]),t._v(" "),a("li",[t._v("https://cn.vuejs.org/ vue官方文档——生命周期")]),t._v(" "),a("li",[t._v("https://zhangmingemma.github.io/2018/10/16/vueRouter-achieve.html vue-router实现原理")]),t._v(" "),a("li",[t._v("https://juejin.im/post/5d59f2a451882549be53b170 30 道 Vue 面试题，内含详细讲解（涵盖入门到精通，自测 Vue 掌握程度）")]),t._v(" "),a("li",[t._v("https://blog.csdn.net/qq_30114149/article/details/73741771 cookie，session优缺点")]),t._v(" "),a("li",[t._v("https://blog.fundebug.com/2019/03/22/differences-of-tcp-and-udp/ 一文搞懂TCP与UDP的区别")]),t._v(" "),a("li",[t._v("https://www.imydl.com/work/4073.html  使用 CDN 的好处和注意事项")]),t._v(" "),a("li",[t._v("https://segmentfault.com/a/1190000012836882 Jquery ajax, Axios, Fetch区别之我见")]),t._v(" "),a("li",[t._v("https://juejin.im/post/5be406705188256dbb5176f9#heading-14 PM2简易使用手册")]),t._v(" "),a("li",[t._v("深入浅出 vue.js")]),t._v(" "),a("li",[t._v("深入浅出 webpack")]),t._v(" "),a("li",[t._v("JavaScript设计模式与开发实践")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/common/2.gif",alt:""}})])])}),[],!1,null,null,null);a.default=s.exports}}]);