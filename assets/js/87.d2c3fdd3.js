(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{403:function(s,t,a){"use strict";a.r(t);var e=a(3),r=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"web前端安全知多少"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#web前端安全知多少"}},[s._v("#")]),s._v(" Web前端安全知多少")]),s._v(" "),t("blockquote",[t("p",[s._v("绳锯木断，水滴石穿")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/common/1.gif",alt:" "}})]),s._v(" "),t("h2",{attrs:{id:"_01-前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_01-前言"}},[s._v("#")]),s._v(" 01 前言")]),s._v(" "),t("p",[s._v("近年来前端的功能再也不是简单的页面开发这么简单，前端难免会和浏览器打交道，大多数人们都会通过浏览器进行网上的业务办理，信息查找等。但是这意味着我们会泄露自身的隐私，如手机号、身份证号等。")]),s._v(" "),t("p",[s._v("早期没有任何防护措施的浏览器发生了很多诈骗事件，随着浏览器的不断更新换代，安全系数也越来越高，接下来我将通过几种常见的前端安全策略，阐述一下我们的隐私如何被保障。")]),s._v(" "),t("h2",{attrs:{id:"_02-前端安全分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_02-前端安全分类"}},[s._v("#")]),s._v(" 02 前端安全分类")]),s._v(" "),t("p",[s._v("前端主要通过浏览器进行交互操作，涉及到浏览器安全的主要有以下5种。")]),s._v(" "),t("ul",[t("li",[s._v("浏览器安全")]),s._v(" "),t("li",[s._v("跨站脚本攻击(XSS)")]),s._v(" "),t("li",[s._v("跨站请求伪造(CSRF)")]),s._v(" "),t("li",[s._v("点击劫持(ClickJacking)")])]),s._v(" "),t("h5",{attrs:{id:"浏览器安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器安全"}},[s._v("#")]),s._v(" "),t("strong",[s._v("浏览器安全")])]),s._v(" "),t("p",[s._v("浏览器拥有同源策略，它可以说是浏览器的核心功能，如果没有同源策略的保护，浏览器的正常功能将受到很大的影响。那么什么是同源策略呢？")]),s._v(" "),t("p",[t("strong",[s._v("浏览器的同源策略，限制来自不同源的脚本对当前域的调用和访问。")])]),s._v(" "),t("p",[s._v("听起来很抽象，举个例子，小明正在浏览 a.com，如果没有同源策略，那么a.com的网站可能会执行来自b.com的一段脚本数据，从而纂改a.com的内容，造成混乱。所以为了不让a.com调用其它页面的脚本或者数据，限制在同一个源内。那么如何才是同一个源呢？")]),s._v(" "),t("p",[t("img",{attrs:{src:"/tech/76db94/4.png",alt:" "}})]),s._v(" "),t("p",[s._v("想要满足同源策略，必须满足以下3个条件，才会被视为同源。")]),s._v(" "),t("ul",[t("li",[s._v("协议相同")]),s._v(" "),t("li",[s._v("域名相同")]),s._v(" "),t("li",[s._v("端口相同")])]),s._v(" "),t("p",[s._v("以上条件缺一不可，首先是协议方面，网站有http协议和https协议之分，https比http更安全，原因是https通过（SSL/TSL）来加密数据，防止数据被窃听和修改。SSL是安全套接层，TSL是传输层安全协议。")]),s._v(" "),t("p",[s._v("然后是域名相同，如 www .a.com , www .b.com就是不同的域名，域名不一样也是不满足策略。最后是端口相同，www .a.com:3000 , www .b.com:5000就是端口不同，也不满足条件。")]),s._v(" "),t("p",[t("img",{attrs:{src:"/tech/76db94/1.png",alt:" "}})]),s._v(" "),t("h5",{attrs:{id:"跨站脚本攻击-xss"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跨站脚本攻击-xss"}},[s._v("#")]),s._v(" "),t("strong",[s._v("跨站脚本攻击(XSS)")])]),s._v(" "),t("p",[s._v("XSS攻击，通常是通过“HTML”注入修改网页，当浏览器执行恶意脚本时可能会被他人控制。XSS攻击危害极大，如果网页开发者不注意防范XSS攻击，可能会对用户产生危害。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("div"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("script"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"XSS攻击！"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("script"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("div"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"/tech/76db94/2.png",alt:" "}})]),s._v(" "),t("p",[s._v("XSS攻击可以分为两种：")]),s._v(" "),t("ul",[t("li",[s._v("持久型")]),s._v(" "),t("li",[s._v("非持久型")])]),s._v(" "),t("p",[s._v("①持久型：代码被写进数据库，比如在评论界面的输入框注入恶意代码，那么每一个用户访问帖子的时候都会执行恶意代码。这种类型的攻击影响最大，特别是对于那种日访问量以千万计算的网站。")]),s._v(" "),t("p",[s._v("②非持久型：一般是通过修改URL的参数方式加入攻击代码，利用某种方式诱导用户进行点击，从而实施攻击。比如以下的代码不加过滤处理就会发生攻击。谷歌浏览器是可以防御此类攻击的。")]),s._v(" "),t("div",{staticClass:"language-php+HTML line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\x3c!-- http://www.domain.com?name=<script>alert(1)<\/script> --\x3e\n<div>{{name}}</div>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("img",{attrs:{src:"/tech/76db94/5.png",alt:" "}})]),s._v(" "),t("p",[s._v("那么既然危害如此之大，该如何防御呢？主要有以下方法：")]),s._v(" "),t("ul",[t("li",[s._v("转义字符")]),s._v(" "),t("li",[s._v("CSP")]),s._v(" "),t("li",[s._v("HtppOnly")])]),s._v(" "),t("p",[s._v("①转义字符：因为一般恶意代码都会是脚本语言，由"),t("script"),s._v("包含，所以我们的思想就是把<，>等转义就可以高效防御。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("escape")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("str")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("&")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'&amp;'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'&lt;'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'&gt;'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v('"')]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'&quto;'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("'")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'&#39;'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'&#96;'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  str "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token regex"}},[t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[s._v("\\/")]),t("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token regex-flags"}},[s._v("g")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'&#x2F;'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" str\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("但是对于富文本那样的编辑器，通过过滤转义等方式可能加大任务量，所以另外一种就是通过CSP的方式，也就是建立白名单的方式进行防御。")]),s._v(" "),t("p",[s._v("②CSP：建立白名单，明确告诉浏览器哪些外部资源可以被加载并执行。通过前端配置规则，浏览器则会自动拦截。")]),s._v(" "),t("ul",[t("li",[s._v("通过设置HTTP Header中的 Content-Security-Policy")]),s._v(" "),t("li",[s._v("设置meta标签的方式 "),t("meta",{attrs:{"http-equiv":"Content-Security-Policy"}})])]),s._v(" "),t("p",[s._v("比如：")]),s._v(" "),t("ul",[t("li",[s._v("只允许加载本站资源")])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("Content"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Security"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Policy"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("src "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'self'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("只允许加载https协议的照片")])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("Content"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Security"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Policy"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" img"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("src https"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n")])])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("允许加载任何来源框架")])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("Content"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Security"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Policy"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" child"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("src "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'none'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("只有当前端配置好之后，剩下的就交给浏览器处理。")]),s._v(" "),t("p",[s._v("③HttpOnly：浏览器将禁止页面的JavaScript访问带有HttpOnly属性的Cookie。实际上HttpOnly并非是为了防御XSS攻击，而是XSS攻击之后的Cookie劫持。")]),s._v(" "),t("p",[s._v("首先解释一下Cookie的产生过程：")]),s._v(" "),t("ol",[t("li",[s._v("浏览器向服务器发送请求，这时还没有Cookie")]),s._v(" "),t("li",[s._v("服务器返回时带有 Set-Cookie 头，向浏览器写入Cookie")]),s._v(" "),t("li",[s._v("Cookie会有一个过期时间，在到期之前，浏览器访问该域名下的页面都会带上Cookie")])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("header")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Set-Cookie: name=zhangsan"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("header")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Set-Cookie: age=12; HttpOnly"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h5",{attrs:{id:"csrf攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csrf攻击"}},[s._v("#")]),s._v(" "),t("strong",[s._v("CSRF")]),s._v("攻击")]),s._v(" "),t("p",[s._v("CSRF 中文名为跨站请求伪造。原理就是攻击者构造出一个后端请求地址，诱导用户点击或者通过某些途径自动发起请求。如果用户是在登录状态下的话，后端就以为是用户在操作，从而进行相应的逻辑。")]),s._v(" "),t("p",[s._v("我们来看一下典型的CSRF攻击（假设）：")]),s._v(" "),t("ol",[t("li",[s._v("A用户登陆某银行账号，本地留有登陆信息cookie")]),s._v(" "),t("li",[s._v("A突然收到黑客B发来的诱导链接，A在登陆状态下打开链接")])]),s._v(" "),t("p",[s._v("其实这就产生攻击。")]),s._v(" "),t("p",[s._v("我们在这里假设A，B都有银行账户，链接就是一个转账申请（按照银行的转账申请格式手动构造请求），然后提交申请后银行服务器误以为是A在操作，所以转账就会成功，此时就产生了攻击。")]),s._v(" "),t("p",[t("img",{attrs:{src:"/tech/76db94/1.jpg",alt:" "}})]),s._v(" "),t("p",[s._v("那么如何预防CSRF攻击呢？")]),s._v(" "),t("p",[s._v("我们知道一般这个攻击都是第三方网站发起的，被攻击的网站无法阻止攻击的发生。所以我们只能增强自己的网站来提升安全性。")]),s._v(" "),t("p",[s._v("通常我们根据CSRF的攻击的特点来进行防御：")]),s._v(" "),t("ul",[t("li",[s._v("同源检测")]),s._v(" "),t("li",[s._v("Samesite Cookie")]),s._v(" "),t("li",[s._v("CSRF Token")]),s._v(" "),t("li",[s._v("双重cookie验证")])]),s._v(" "),t("p",[s._v("①同源策略：在HTTP协议中，每一个异步请求都会携带两个Header，用于标记来源域名：")]),s._v(" "),t("ul",[t("li",[s._v("Origin Header")]),s._v(" "),t("li",[s._v("Referer Header")])]),s._v(" "),t("p",[s._v("这两个Header在浏览器发起请求时，大多数情况会自动带上，并且不能由前端自定义内容。服务器可以通过解析这两个Header中的域名，确定请求的来源域。若不是来自同一个域的HTTP请求则不会生效。")]),s._v(" "),t("p",[s._v("②Samesite Cookie：HTTP响应头中有Set-Cookie属性，属性有两个值，Strict 和 Lax。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("Set"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Cookie"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" foo"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" Samesite"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Strict\nSet"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Cookie"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" bar"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" Samesite"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Lax\nSet"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Cookie"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" baz"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("当设置为Strict的时候，伪造的请求是不会带上本地的cookie进行请求，所以这时候CSRF攻击不会生效。当设置为Lax的时候，在同源内发送请求是可以带上的。")]),s._v(" "),t("p",[s._v("③CSRF Token：用户打开页面的时候服务器下发一个Token，值为通过加密算法进行加密。每次请求都要加上这个Token值，服务端验证是否有效，无效则拒绝。")]),s._v(" "),t("p",[s._v("④双重Cookie验证：用户在发送请求的时候生成一个Cookie值，内容为随机字符串，前端向后端发送请求时取出Cookie值与服务端进行比较，若一致则有效，不一致则拒绝。")]),s._v(" "),t("h5",{attrs:{id:"点击劫持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#点击劫持"}},[s._v("#")]),s._v(" "),t("strong",[s._v("点击劫持")])]),s._v(" "),t("p",[s._v("点击劫持是一种视觉欺骗的攻击手段。攻击者将需要攻击的网站通过 iframe 嵌套的方式嵌入自己的网页中，并将 iframe 设置为透明，在页面中透出一个按钮诱导用户点击。")]),s._v(" "),t("p",[t("img",{attrs:{src:"/tech/76db94/3.png",alt:" "}})]),s._v(" "),t("p",[s._v("防御方法：")]),s._v(" "),t("ul",[t("li",[s._v("X-FRAME-OPTIONS")]),s._v(" "),t("li",[s._v("JS防御")])]),s._v(" "),t("p",[s._v("①X-FRAME-OPTIONS：X-FRAME-OPTIONS 是一个 HTTP 响应头，在现代浏览器有一个很好的支持。这个 HTTP 响应头 就是为了防御用 iframe 嵌套的点击劫持攻击。该响应头有三个属性可选：")]),s._v(" "),t("ul",[t("li",[s._v("DENY，表示页面不允许通过 iframe 的方式展示")]),s._v(" "),t("li",[s._v("SAMEORIGIN，表示页面可以在相同域名下通过 iframe 的方式展示")]),s._v(" "),t("li",[s._v("ALLOW-FROM，表示页面可以在指定来源的 iframe 中展示")])]),s._v(" "),t("p",[s._v("②JS防御：对于某些远古浏览器来说，并不能支持上面的这种方式，那我们只有通过 JS 的方式来防御点击劫持了。")]),s._v(" "),t("div",{staticClass:"language-php+HTML line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//作用就是当通过 iframe 的方式加载页面时，\n//攻击者的网页直接不显示所有内容了\n<head>\n  <style id=\"click-jack\">\n    html {\n      display: none !important;\n    }\n</style>\n</head>\n<body>\n  <script>\n    if (self == top) {\n      var style = document.getElementById('click-jack')\n      document.body.removeChild(style)\n    } else {\n      top.location = self.location\n    }\n<\/script>\n</body>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h2",{attrs:{id:"_03-小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_03-小结"}},[s._v("#")]),s._v(" 03 小结")]),s._v(" "),t("p",[s._v("前端安全已经成为了面试必问的知识点，前端的发展离不开浏览器的更新换代，互联网人数的激增始终会有一些不法分子利用安全漏洞进行网络诈骗，我们作为离用户最近的开发人员，有义务去保护我们的用户的隐私安全，给用户一个良好的体验和信任。")]),s._v(" "),t("p",[t("img",{attrs:{src:"/common/2.gif",alt:" "}})])])}),[],!1,null,null,null);t.default=r.exports}}]);